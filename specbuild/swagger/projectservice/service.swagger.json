{
  "swagger": "2.0",
  "info": {
    "title": "projectservice/service.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/mockdata/projects/create.json": {
      "get": {
        "summary": "Creates a new Project",
        "operationId": "CreateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectProjectEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "data.cost_limit.currency_code",
            "description": "The 3-letter currency code defined in ISO 4217.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.cost_limit.display_name",
            "description": "String representation of money entity.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.cost_limit.nanos",
            "description": "Number of nano (10^-9) units of the amount. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "data.cost_limit.units",
            "description": "The whole units of the amount.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "data.description",
            "description": "Short project description.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.display_name",
            "description": "Localized String representation of a project.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.end.day",
            "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0. if specifying a year by itself or a year and month where the day is not significant.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.end.display_name",
            "description": "Localized String representation of date.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.end.month",
            "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.end.year",
            "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.id",
            "description": "Identity of a project.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.start.day",
            "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0. if specifying a year by itself or a year and month where the day is not significant.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.start.display_name",
            "description": "Localized String representation of date.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.start.month",
            "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.start.year",
            "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/mockdata/projects/list.json": {
      "get": {
        "summary": "The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.",
        "operationId": "ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectProjectCollection"
            }
          }
        },
        "parameters": [
          {
            "name": "fields",
            "description": "Partial representation, fields=id,name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_by",
            "description": "*\nSort fields, comma separated list for the ordering\nuse **?filter=-display_name** with a dash to sort descending\nuse **?filter=display_name** to sort ascending.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page number for paginated content. Tipp: follow the HATEOAS next, prev,...",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Number of elements to return per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "view",
            "description": "https://cloud.google.com/apis/design/design_patterns#resource_view.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "description": "Query term to search a project.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/mockdata/projects/{prj}/delete.json": {
      "get": {
        "summary": "Delete a Project",
        "operationId": "DeleteProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "prj",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/mockdata/projects/{prj}/get.json": {
      "get": {
        "summary": "The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project",
        "operationId": "GetProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectProjectEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "prj",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/mockdata/projects/{prj}/update.json": {
      "get": {
        "summary": "Updates a Project, partial updates are supported",
        "operationId": "UpdateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectProjectEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "prj",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data.cost_limit.currency_code",
            "description": "The 3-letter currency code defined in ISO 4217.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.cost_limit.display_name",
            "description": "String representation of money entity.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.cost_limit.nanos",
            "description": "Number of nano (10^-9) units of the amount. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "data.cost_limit.units",
            "description": "The whole units of the amount.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "data.description",
            "description": "Short project description.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.display_name",
            "description": "Localized String representation of a project.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.end.day",
            "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0. if specifying a year by itself or a year and month where the day is not significant.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.end.display_name",
            "description": "Localized String representation of date.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.end.month",
            "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.end.year",
            "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.id",
            "description": "Identity of a project.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.start.day",
            "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0. if specifying a year by itself or a year and month where the day is not significant.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.start.display_name",
            "description": "Localized String representation of date.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.start.month",
            "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.start.year",
            "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    }
  },
  "definitions": {
    "furoFieldConstraint": {
      "type": "object",
      "properties": {
        "is": {
          "type": "string",
          "title": "the constraint value as string, even it is a number"
        },
        "message": {
          "type": "string",
          "title": "The message to display on constraint violation"
        }
      },
      "title": "a single fieldconstraint"
    },
    "furoFieldMeta": {
      "type": "object",
      "properties": {
        "default": {
          "type": "string",
          "title": "The default value as JSON string"
        },
        "hint": {
          "type": "string",
          "title": "A hint"
        },
        "label": {
          "type": "string",
          "title": "The label"
        },
        "options": {
          "$ref": "#/definitions/furoFieldoption",
          "title": "Fieldoptions"
        },
        "readonly": {
          "type": "boolean",
          "format": "boolean",
          "title": "readonly"
        },
        "repeated": {
          "type": "boolean",
          "format": "boolean",
          "title": "repeated"
        },
        "typespecific": {
          "$ref": "#/definitions/protobufAny",
          "title": "Put in type specific metas for your fields here"
        }
      },
      "title": "Metas for a field"
    },
    "furoFieldoption": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "title": "a list with options, use furo.optionitem or your own"
        }
      },
      "title": "Metas for a field"
    },
    "furoLink": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "title": "link"
        },
        "method": {
          "type": "string",
          "title": "method of curl"
        },
        "rel": {
          "type": "string",
          "title": "the relationship"
        },
        "service": {
          "type": "string",
          "title": "name of the service which can handle this link"
        },
        "type": {
          "type": "string",
          "title": "mime type"
        }
      },
      "title": "link"
    },
    "furoMeta": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/furoMetaField"
          },
          "title": "fields of meta info"
        }
      },
      "title": "meta info"
    },
    "furoMetaField": {
      "type": "object",
      "properties": {
        "constraints": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/furoFieldConstraint"
          },
          "title": "constraints for a field"
        },
        "meta": {
          "$ref": "#/definitions/furoFieldMeta",
          "title": "meta information of a field"
        }
      },
      "title": "fields of meta info"
    },
    "personPerson": {
      "type": "object",
      "properties": {
        "display_name": {
          "type": "string",
          "title": "Localized String representation of a person"
        },
        "first_name": {
          "type": "string",
          "title": "First name of a person"
        },
        "id": {
          "type": "string",
          "title": "Identity of a person"
        },
        "name": {
          "type": "string",
          "title": "Name of a person"
        },
        "phone_nr": {
          "type": "string",
          "title": "Internal phone number"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of main skills of a person"
        },
        "update_mask": {
          "$ref": "#/definitions/protobufFieldMask",
          "title": "Contains a field_mask which fields of the targeted resource are going to be updated"
        }
      },
      "title": "Person message type"
    },
    "projectProject": {
      "type": "object",
      "properties": {
        "cost_limit": {
          "$ref": "#/definitions/typeMoney",
          "title": "Project cost limit"
        },
        "description": {
          "type": "string",
          "title": "Short project description"
        },
        "display_name": {
          "type": "string",
          "title": "Localized String representation of a project"
        },
        "end": {
          "$ref": "#/definitions/typeDate",
          "title": "Prospective end date of the project"
        },
        "id": {
          "type": "string",
          "title": "Identity of a project"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/personPerson"
          },
          "title": "List of project members"
        },
        "start": {
          "$ref": "#/definitions/typeDate",
          "title": "Start date of the project"
        }
      },
      "title": "Project description"
    },
    "projectProjectCollection": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/projectProjectEntity"
          },
          "title": "Contains a project.ProjectEntity repeated"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/furoLink"
          },
          "title": "Hateoas links"
        },
        "meta": {
          "$ref": "#/definitions/furoMeta",
          "title": "Meta for the response"
        }
      },
      "title": "ProjectCollection with repeated ProjectEntity"
    },
    "projectProjectEntity": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/projectProject",
          "title": "contains a project.Project"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/furoLink"
          },
          "title": "Hateoas links"
        },
        "meta": {
          "$ref": "#/definitions/furoMeta",
          "title": "Meta for the response"
        }
      },
      "title": "ProjectEntity with Project"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Any contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message. client uses type `ArrayBuffer` for the value field .  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/any.proto"
    },
    "protobufFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The implementation of any API method which has a FieldMask type field in the request should verify the included field paths, and return an `INVALID_ARGUMENT` error if any path is duplicated or unmappable."
        }
      },
      "title": "A field mask in update operations specifies which fields of the targeted resource are going to be updated. https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/field_mask.proto"
    },
    "typeDate": {
      "type": "object",
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0. if specifying a year by itself or a year and month where the day is not significant."
        },
        "display_name": {
          "type": "string",
          "title": "Localized String representation of date"
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day."
        },
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year."
        }
      },
      "title": "Date, https://github.com/googleapis/googleapis/blob/master/google/date.proto"
    },
    "typeMoney": {
      "type": "object",
      "properties": {
        "currency_code": {
          "type": "string",
          "description": "The 3-letter currency code defined in ISO 4217."
        },
        "display_name": {
          "type": "string",
          "title": "String representation of money entity"
        },
        "nanos": {
          "type": "string",
          "format": "int64",
          "description": "Number of nano (10^-9) units of the amount. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount."
        }
      },
      "title": "Represents an amount of money with its currency type. https://github.com/googleapis/googleapis/blob/master/google/money.proto"
    }
  }
}
